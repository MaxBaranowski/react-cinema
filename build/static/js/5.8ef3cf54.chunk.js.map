{"version":3,"sources":["components/structure/MainContent/Pages/components/Movie.js","components/structure/MainContent/Pages/Home/components/Banner.js","components/structure/MainContent/Pages/Home/components/sections/JustAdded.js","components/structure/MainContent/Pages/Home/components/sections/Recommended.js","components/structure/MainContent/Pages/Home/components/Content.js","components/structure/MainContent/Pages/Home/index.js"],"names":["Movie","props","Fragment","className","to","id","src","process","img","alt","Banner","state","movies","movie","isError","this","getMovieForPoster","e","Error","setPoster","Title","Year","imdbRating","fetch","window","location","hostname","method","headers","Accept","body","JSON","stringify","sortBy","order","limit","skip","Math","floor","random","then","response","json","data","setState","getPostersList","catch","imdbID","length","hasOwnProperty","Posters","Poster","Component","JustAdded","createMoviesList","Recommended","Content","Comp","MoviesList","list","push","key","name","year","Released","country","Country","Home","email","password"],"mappings":"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","file":"static/js/5.8ef3cf54.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\n\nconst Movie = props => {\n  return (\n    <React.Fragment>\n      <div className=\"movie\">\n        <Link to={`/movie/` + props.id}>\n          <div className=\"movie-body\">\n            <img src={process.env.PUBLIC_URL + props.img} alt=\"\"/>\n          </div>\n          {/*<div className=\"movie-description\">*/}\n          {/*<h3 className=\"movie-name\">*/}\n          {/*{props.name}*/}\n          {/*</h3>*/}\n          {/*<p className=\"movie-genre\">*/}\n          {/*{props.country}*/}\n          {/*</p>*/}\n          {/*<p className=\"movie-genre\">*/}\n          {/*{props.year}*/}\n          {/*</p>*/}\n          {/*</div>*/}\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n};\n\nMovie.propTypes = {\n  id: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  country: PropTypes.string,\n  year: PropTypes.string\n};\n\nexport default Movie;\n","import React, {Component} from \"react\";\n\nexport default class Banner extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      movies: null,\n      movie: null,\n      isError: false\n    };\n  }\n  \n  componentDidMount() {\n    try {\n      this.getMovieForPoster();\n    } catch (e) {\n      throw new Error(\"Error: \", e);\n    }\n  }\n  \n  render() {\n    const movie = this.state.movie;\n    if (movie) {\n      return (\n        <React.Fragment>\n          <header className=\"home-banner\">\n            <img src={this.setPoster()} alt=\"\"/>\n            <h1>{movie.Title}</h1>\n            <h2>{movie.Year}</h2>\n            <p>{movie.imdbRating}</p>\n          </header>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <header className=\"home-banner\">Loading...</header>\n        </React.Fragment>\n      );\n    }\n  }\n  \n  getMovieForPoster() {\n    fetch(`https://${window.location.hostname}:443/api/movies`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sortBy: \"ReleasedUnix\",\n        order: \"desc\",\n        limit: 1,\n        skip: Math.floor(Math.random() * 50) + 1\n      })\n    }).then(response =>\n      response\n        .json()\n        .then(data => {\n          this.setState({\n            movies: data\n          });\n          this.getPostersList(); // add posters array to state movie\n        })\n        .catch(e => {\n          this.setState({\n            isError: true\n          });\n        })\n    );\n  }\n  \n  getPostersList() {\n    let movie = this.state.movies[0]; // chose random movie for banner\n    fetch(`https://${window.location.hostname}:443/api/poster`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: movie.imdbID\n      })\n    }).then(response =>\n      response.json().then(data => {\n        if (data.length < 1) {\n          //  chose new movie if no posters\n          this.getMovieForPoster();\n          return;\n        }\n        movie[\"Posters\"] = data;\n        this.setState({\n          movie: movie\n        });\n      })\n    );\n  }\n  \n  setPoster() {\n    const movie = this.state.movie;\n    if (movie.hasOwnProperty(\"Posters\")) {\n      return movie.Posters[\n      Math.floor(Math.random() * movie.Posters.length) + 1\n        ];\n    } else {\n      return movie.Poster;\n    }\n  }\n}\n","import React, {Component} from \"react\";\n\nimport Movie from \"../../../components/Movie\"\n\nexport default class JustAdded extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: []\n    };\n    \n  }\n  \n  componentDidMount() {\n    try {\n      fetch(`https://${window.location.hostname}:443/api/movies`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sortBy: \"ReleasedUnix\",\n          limit: 12\n        })\n      }).then(response =>\n        response.json()\n          .then(data => {\n            this.setState({\n              movies: this.props.createMoviesList(Movie, data)\n            });\n          }).catch(e => {\n          this.setState({\n            isError: true\n          });\n        })\n      )\n    } catch (e) {\n      throw new Error(\"Error: \", e);\n    }\n    \n  }\n  \n  render() {\n    const {movies} = this.state;\n    if (movies) {\n      return (\n        <React.Fragment>\n          <section className=\"section just-added\">\n            <header>\n              <h1>Just Added</h1>\n            </header>\n            <div className=\"section-body\">\n              {this.state.movies}\n            </div>\n          </section>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <section className=\"section just-added\">\n          <header>\n            <h1>Just Added</h1>\n          </header>\n          <div className=\"section-body\">\n            Loading...\n          </div>\n        </section>\n      )\n    }\n  }\n}\n","import React, {Component} from \"react\";\n\nimport Movie from \"../../../components/Movie\"\n\nexport default class Recommended extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: []\n    }\n    \n  }\n  \n  componentDidMount() {\n    try {\n      fetch(`https://${window.location.hostname}:443/api/movies`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sortBy: \"imdbRating\",\n          limit: 12\n        })\n      }).then(response =>\n        response.json()\n          .then(data => {\n            this.setState({\n              movies: this.props.createMoviesList(Movie, data)\n            });\n          }).catch(e => {\n          this.setState({\n            isError: true\n          });\n        })\n      )\n    } catch (e) {\n      throw new Error(\"Error: \", e);\n    }\n  }\n  \n  render() {\n    const {movies} = this.state;\n    if (movies) {\n      return (\n        <React.Fragment>\n          <section className=\"section recommended\">\n            <header>\n              <h1>Recommended</h1>\n            </header>\n            <div className=\"section-body\">\n              {this.state.movies}\n            </div>\n          </section>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <section className=\"section recommended\">\n          <header>\n            <h1>Recommended</h1>\n          </header>\n          <div className=\"section-body\">\n            Loading...\n          </div>\n        </section>\n      )\n    }\n  }\n}\n\n","import React from \"react\";\n\nimport JustAdded from \"./sections/JustAdded\";\nimport Recommended from \"./sections/Recommended\";\n\nexport default function Content() {\n  \n  const createMoviesList = (Comp, MoviesList) => {\n    let list = [];\n    for (let movie of MoviesList) {\n      list.push(\n        <Comp key={movie.imdbID} id={movie.imdbID} img={movie.Poster} name={movie.Title}\n              year={movie.Released} country={movie.Country}>\n        </Comp>\n      );\n    }\n    return list;\n  };\n  \n  \n  return (\n    <React.Fragment>\n      <main className=\"home-sections\">\n        <JustAdded createMoviesList={createMoviesList}/>\n        <Recommended createMoviesList={createMoviesList}/>\n      </main>\n    </React.Fragment>\n  )\n}\n","import React, {Component} from \"react\";\r\n\r\nimport Banner from \"./components/Banner\";\r\nimport Content from \"./components/Content\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Home</h1>\r\n        <div className=\"home-wrapper\">\r\n          <Banner/>\r\n          <Content/>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}